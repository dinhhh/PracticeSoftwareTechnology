
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PV
 */
public class MidAutumn extends javax.swing.JFrame {

    /**
     * Creates new form MidAutumn
     */
    
    final String url = "jdbc:mysql://localhost:3306/homework_db";
    final String user = "root";
    final String password = "";
    
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    
    
    
    public MidAutumn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        HoTen = new javax.swing.JTextField();
        Tuoi = new javax.swing.JTextField();
        ConOng = new javax.swing.JTextField();
        DiaChi = new javax.swing.JTextField();
        PhanQua = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        GioiTinh = new javax.swing.JComboBox<>();
        GiaTri = new javax.swing.JTextField();
        Them = new javax.swing.JButton();
        SoLuong = new javax.swing.JSpinner();
        ConBa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        TruongHoc = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ma.png"))); // NOI18N
        jLabel1.setText("Tết Trung Thu");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Họ Tên: ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Tuổi:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Họ tên bố");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Phần Quà:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Số Lượng:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Giá Trị:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Địa Chỉ:");

        Tuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TuoiActionPerformed(evt);
            }
        });

        DiaChi.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        DiaChi.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setText("Giới Tính:");

        GioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ", "Khác" }));
        GioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GioiTinhActionPerformed(evt);
            }
        });

        GiaTri.setText("(Đồng)");

        Them.setBackground(new java.awt.Color(51, 204, 0));
        Them.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Them.setForeground(new java.awt.Color(255, 255, 255));
        Them.setText("Thêm");
        Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 204, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Danh Sách Đã Trao Thưởng");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/line.png"))); // NOI18N

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/line.png"))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel12.setText("Truong");

        TruongHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TruongHocActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel13.setText("Ho ten me");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)))
                            .addComponent(jLabel8)
                            .addComponent(jLabel12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel13))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GiaTri, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Them)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addComponent(ConOng)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Tuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(70, 70, 70)
                                        .addComponent(jLabel9)
                                        .addGap(34, 34, 34)
                                        .addComponent(GioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(HoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(DiaChi)
                            .addComponent(PhanQua)
                            .addComponent(ConBa)
                            .addComponent(TruongHoc))))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(HoTen)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(GioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(47, 100, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(ConOng, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConBa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(TruongHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PhanQua, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(SoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GiaTri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Them)
                            .addComponent(jButton1))
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TuoiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TuoiActionPerformed

    private void GioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GioiTinhActionPerformed

    private boolean checkExistEntity(String entity, String column, String table){
        
        try{
            con = DriverManager.getConnection(url, user, password);
            String sql = "SELECT * FROM " + table;
            PreparedStatement pst = con.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();
            while (rs.next()){
                if(rs.getString(column).equals(entity) == true){
                    return true;
                }
            }
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(rootPane, e);
            
        }
        return false;
        
    }
    
    private void ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemActionPerformed
        

        try{
            con = DriverManager.getConnection(url, user, password);
            String insert = "";
            
            if ((checkExistEntity(ConOng.getText().trim(), "Father", "Family") == false) || (checkExistEntity(ConBa.getText().trim(), "Mother", "Family") == false)){
                insert = "INSERT INTO Family(`Father`, `Mother`, `Address`)"
                        + "VALUES (?, ?, ?)";
                pst = con.prepareStatement(insert);
                pst.setString(1, ConOng.getText().trim());
                pst.setString(2, ConBa.getText().trim());
                pst.setString(3, DiaChi.getText().trim());
                pst.executeUpdate();
            }
            
            if (checkExistEntity(HoTen.getText().trim(), "Name", "Recipient") == false){
                insert = "INSERT INTO Recipient(`Name`, `Age`, `Sex`, `School`, `ID_Family`)"
                        + "VALUES (?, ?, ?, ?, ?)";
                String sex = GioiTinh.getSelectedItem().toString().trim();
                pst = con.prepareStatement(insert);
                pst.setString(1, HoTen.getText().trim());
                pst.setString(2, Tuoi.getText().trim());
                pst.setString(3, sex);
                pst.setString(4, TruongHoc.getText().trim());
                // select id_family to insert
                String sel = "SELECT * FROM Family WHERE Father like ? AND Mother like ?";
                PreparedStatement pst2 = con.prepareStatement(sel);
                pst2.setString(1, ConOng.getText().trim());
                pst2.setString(2, ConBa.getText().trim());
                ResultSet idRes = pst2.executeQuery();
                while(idRes.next()){
                    int idFamily = idRes.getInt("ID");
                    pst.setString(5, Integer.toString(idFamily));
                }
                pst.executeUpdate();
                System.out.println("INSERT sucessful");
            }
            
            // if Gift have same name but different cost => flag = -1
            String sql = "SELECT * FROM Gift";
            PreparedStatement pst2 = con.prepareStatement(sql);
            ResultSet rs2 = pst2.executeQuery();
            int flag = -1;
            while(rs2.next()){
                if(rs2.getInt("Cost") == Integer.parseInt(GiaTri.getText().trim())){
                    flag = 0;
                }
            }
            
            boolean c = checkExistEntity(PhanQua.getText().trim(), "Gift_Name", "Gift");
            if ((c == false) || (c == true && flag == -1) ){
                insert = "INSERT INTO Gift(`Gift_Name`, `Cost`) "
                        + "VALUES (?, ?)";
                pst = con.prepareStatement(insert);
                pst.setString(1, PhanQua.getText().trim());
                pst.setString(2, GiaTri.getText().trim());
                pst.executeUpdate();
                System.out.println("inserted into Gift table");
            }
            
            // add row to Receive_Gift table
            // get id of recipient
            String selectID = "SELECT * FROM Recipient, Family WHERE Recipient.ID_Family = Family.ID";
            pst = con.prepareStatement(selectID);
            ResultSet rs = pst.executeQuery();
            int idRecipient = -1;
            while (rs.next()){
                if (rs.getString("Name").equals(HoTen.getText().trim()) && (rs.getString("Father").equals(ConOng.getText().trim())) 
                        && (rs.getString("Mother").equals(ConBa.getText().trim())) && (rs.getString("Address").equals(DiaChi.getText().trim()))){
                    idRecipient = rs.getInt("ID");
                }
            }
            int idEvent = -1;
            int idGift = -1;
            int idAchievement = -1;
            // get id of Gift
            selectID = "SELECT * FROM Gift WHERE Gift.Gift_Name = ?";
            pst = con.prepareStatement(selectID);
            pst.setString(1, PhanQua.getText().trim());
            rs = pst.executeQuery();
            while(rs.next()){
                idGift = rs.getInt("ID");
            }
            // get id of Event 
            selectID = "SELECT * FROM Event WHERE Event.Name = ?";
            pst = con.prepareStatement(selectID);
            pst.setString(1, "Trung thu");
            rs = pst.executeQuery();
            while(rs.next()){
                idEvent = rs.getInt("ID");
            }
            // get id of Achievement
            selectID = "SELECT * FROM Achievement WHERE Achievement.Achievement_Name = ?";
            pst = con.prepareStatement(selectID);
            pst.setString(1, "Dịp đặc biệt");
            rs = pst.executeQuery();
            while(rs.next()){
                idAchievement = rs.getInt("ID");
            }
            
            insert = "INSERT INTO Receive_Gift(`ID_Recipient`, `ID_Gift`, `ID_Event`, `ID_Achievement`, `Quantity`) VALUES (?, ?, ?, ?, ?)";
            pst = con.prepareStatement(insert);
            pst.setString(1, Integer.toString(idRecipient));
            pst.setString(2, Integer.toString(idGift));
            pst.setString(3, Integer.toString(idEvent));
            pst.setString(4, Integer.toString(idAchievement));
            pst.setString(5, Integer.toString((Integer) SoLuong.getValue()));
            pst.executeUpdate();

            JOptionPane.showMessageDialog(rootPane, "Đã Lưu !");
        }
        catch(Exception ex){
//            JOptionPane.showMessageDialog(rootPane, ex);
            ex.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_ThemActionPerformed

    private void TruongHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TruongHocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TruongHocActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DisplayQuery d = new DisplayQuery();
        d.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MidAutumn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MidAutumn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MidAutumn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MidAutumn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MidAutumn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConBa;
    private javax.swing.JTextField ConOng;
    private javax.swing.JTextField DiaChi;
    private javax.swing.JTextField GiaTri;
    private javax.swing.JComboBox<String> GioiTinh;
    private javax.swing.JTextField HoTen;
    private javax.swing.JTextField PhanQua;
    private javax.swing.JSpinner SoLuong;
    private javax.swing.JButton Them;
    private javax.swing.JTextField TruongHoc;
    private javax.swing.JTextField Tuoi;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
